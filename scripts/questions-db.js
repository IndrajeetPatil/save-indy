let questions = [
  // ---------------- beginner ----------------

  {
    question: "What will `+true` evaluate to?",
    answers: ["0", "1", "Syntax error", "2"],
    correctAnswer: "1",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "What does `null == undefined` evaluate to?",
    answers: ["true", "false", "undefined", "null"],
    correctAnswer: "true",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "Which of the following is not a literal?",
    answers: ["null", "true", "myVar", "-3.14"],
    correctAnswer: "myVar",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "Which of the following is not a falsy value?",
    answers: ["' '", "null", "undefined", "[ ]"],
    correctAnswer: "[ ]",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "Which of the following is not a truthy value?",
    answers: ["'false'", "'0'", "''", "[ ]"],
    correctAnswer: "''",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "Which of the following is not a primitive type?",
    answers: ["string", "object", "symbol", "undefined"],
    correctAnswer: "object",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "Which of the following array methods doesn't create a new array?",
    answers: ["filter", "sort", "map", "reduce"],
    correctAnswer: "sort",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "Which of the following statements is true?",
    answers: ["Objects are immutable.", "Variables are untyped.", "Primitives are mutable.", "Constants are typed."],
    correctAnswer: "Variables are untyped.",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "Which of these is not a global constant?",
    answers: ["-Infinity", "-0", "NaN", "-NaN"],
    correctAnswer: "-NaN",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "Which special value is returned if underflow occurs from a negative number?",
    answers: ["-Infinity", "-0", "0", "NaN"],
    correctAnswer: "-0",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "What will `0 === -0` evaluate to?",
    answers: ["null", "true", "false", "undefined"],
    correctAnswer: "true",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "Which of the following is not a valid string delimiter?",
    answers: ["'", '"', "`", "{"],
    correctAnswer: "{",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "Currently, which is not a meaningful escape sequence?",
    answers: ["\\b", "\\q", "\\n", "\\t"],
    correctAnswer: "\\q",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "Which of these string methods doesn't return a Boolean?",
    answers: ["startsWith", "endsWith", "includes", "indexOf"],
    correctAnswer: "indexOf",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "Which of this is a valid RegExp datatype?",
    answers: ["/^x/", "\\^x\\", "/^x\\", "\\^x/"],
    correctAnswer: "/^x/",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "If `x` is an array of length 2, what would `x[2]` return?",
    answers: ["null", "undefined", "Error object", "NaN"],
    correctAnswer: "undefined",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "What does `Number(undefined)` evaluate to?",
    answers: ["undefined", "1", "0", "NaN"],
    correctAnswer: "NaN",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "What does `Number(null)` evaluate to?",
    answers: ["undefined", "1", "0", "NaN"],
    correctAnswer: "0",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "If a variable is declared but not initialized, what's its value?",
    answers: ["undefined", "null", "0", "NaN"],
    correctAnswer: "undefined",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "If `let a = [], b = [];`, what would a == b evaluate to?",
    answers: ["undefined", "true", "false", "NaN"],
    correctAnswer: "false",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "Which of the following will not return `NaN`?",
    answers: ["1 + 'x'", "1 * 'x'", "1 % 'x'", "1 - 'x'"],
    correctAnswer: "1 + 'x'",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "What would `Boolean(() =&gt; {})` evaluate to?",
    answers: ["undefined", "true", "false", "NaN"],
    correctAnswer: "true",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "What would `0 == '0' || 0 === '0'`, evaluate to?",
    answers: ["undefined", "true", "false", "null"],
    correctAnswer: "true",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "Which is not a valid syntax for a `for` loop?",
    answers: ["for(i; i < x.length; i++)", "for(let i of x)", "for(const i of x)", "for(let i in x)"],
    correctAnswer: "for(i; i < x.length; i++)",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "Which of the following will not return `ll`?",
    answers: ["x.slice(2, 4);", "x.substring(2, 4);", "x[2] + x[3];", "x[2, 3];"],
    correctAnswer: "x[2, 3];",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "If `let x = [5, , 1];`, then what is `x[1]`?",
    answers: ["NaN", "null", "5", "undefined"],
    correctAnswer: "undefined",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "If `let x = [5, 1, ];`, then what is `x.length`?",
    answers: ["2", "3", "0", "undefined"],
    correctAnswer: "2",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "Which of the following is not a valid identifier?",
    answers: ["a3", "_a3", "3a", "A3"],
    correctAnswer: "_a3",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "If `let x; y = 0;`, what would `x.[y++]` evaluate to?",
    answers: ["TypeError", "null", "undefined", "NaN"],
    correctAnswer: "TypeError",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "Which of the following is not a valid operator?",
    answers: ["++", "delete", "??", "?!"],
    correctAnswer: "?!",
    language: "javascript",
    level: "beginner",
  },
  {
    question: "Which keyword calls the parent constructor?",
    answers: ["new", "this", "super", "here"],
    correctAnswer: "super",
    language: "javascript",
    level: "beginner",
  },

  // ---------------- intermediate ----------------

  {
    question: "Which primary expression is not a constant?",
    answers: ["true", "false", "null", "this"],
    correctAnswer: "this",
    language: "javascript",
    level: "intermediate",
  },
  {
    question: "Which of the following objects doesn't have a literal syntax?",
    answers: ["string", "symbol", "BigInt", "integer"],
    correctAnswer: "symbol",
    language: "javascript",
    level: "intermediate",
  },
  {
    question: "In `let [x, y, z] = [1, [2, 3]];`, what value is assigned to `z`?",
    answers: ["[2, 3]", "2", "3", "undefined"],
    correctAnswer: "undefined",
    language: "javascript",
    level: "intermediate",
  },
  {
    question: "Which option produces variable `x` without block scope?",
    answers: ["let x", "const x", "var x", "no way exists"],
    correctAnswer: "var x",
    language: "javascript",
    level: "intermediate",
  },
  {
    question: "What would [a, b, x] after `let x = 1; let [a, b] = [++x, x++];` is run?",
    answers: ["[2, 2, 3]", "[1, 2, 3]", "[2, 2, 2]", "[2, 3, 3]"],
    correctAnswer: "[2, 2, 3]",
    language: "javascript",
    level: "intermediate",
  },
  {
    question: "If `let x = { y: 1 };`, which is an invalid property access expression?",
    answers: ["x.y", "x['y']", "x?.y", "x?['y']"],
    correctAnswer: "x?['y']",
    language: "javascript",
    level: "intermediate",
  },
  {
    question: "If `let x; y = 0;`, what would `x?.[y++]` evaluate to?",
    answers: ["TypeError", "null", "undefined", "NaN"],
    correctAnswer: "undefined",
    language: "javascript",
    level: "intermediate",
  },
  {
    question: "Which of these will produce a TypeError?",
    answers: ["[...'hi'];", "[...new Set([1, 2])];", "[...[1, 2]];", "[...{ x: [1, 2] }];"],
    correctAnswer: "[...{ x: [1, 2] }];",
    language: "javascript",
    level: "intermediate",
  },

  // ---------------- advanced ----------------

  {
    question: "Which is not a valid algorithm for object-to-primitive conversions?",
    answers: ["prefer-string", "prefer-number", "prefer-boolean", "no-preference"],
    correctAnswer: "prefer-boolean",
    language: "javascript",
    level: "advanced",
  },
  {
    question: "What's the standard way to refer to global object in any context?",
    answers: ["global", "globalThis", "window", "self"],
    correctAnswer: "globalThis",
    language: "javascript",
    level: "advanced",
  },
  {
    question: "In `let [x, y, ...z] = [1, [2, 3]];`, what value is assigned to `z`?",
    answers: ["[ ]", "null", "3", "undefined"],
    correctAnswer: "[ ]",
    language: "javascript",
    level: "advanced",
  },
  {
    question: "Which variable declaration method hoists it to the top of enclosing function?",
    answers: ["let x", "const x", "var x", "no method exists"],
    correctAnswer: "var x",
    language: "javascript",
    level: "advanced",
  },

  {
    question: "What would be the value of `tan` after `let {sin, cos, ...tan} = Math;`?",
    answers: ["function tan() { [native code] }", "{ }", "TypeError", "udefined"],
    correctAnswer: "{ }",
    language: "javascript",
    level: "advanced",
  },
  {
    question: "What is the length of string literal 'ðŸ˜‹'?",
    answers: ["1", "2", "0", "undefined"],
    correctAnswer: "2",
    language: "javascript",
    level: "advanced",
  },
];
